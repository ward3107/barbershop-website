rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Bookings collection
    match /bookings/{bookingId} {
      // Anyone can create a booking (for appointment booking)
      allow create: if true;

      // Users can read their own bookings
      allow read: if isAuthenticated() &&
                     resource.data.userId == request.auth.uid;

      // Admins can read, update, and delete all bookings
      allow read, update, delete: if isAdmin();
    }

    // Users collection
    match /users/{userId} {
      // Users can read and update their own profile
      allow read, update: if isAuthenticated() && userId == request.auth.uid;

      // Anyone can create their profile (on signup)
      allow create: if isAuthenticated() && userId == request.auth.uid;

      // Admins can read all users
      allow read: if isAdmin();
    }

    // Admins collection (read-only, managed manually)
    match /admins/{adminId} {
      allow read: if isAuthenticated();
      allow write: if false; // Admins must be added manually via Firebase Console
    }

    // Gallery collection
    match /gallery/{imageId} {
      // Anyone can read gallery images (public)
      allow read: if true;

      // Only admins can create, update, or delete gallery images
      allow create, update, delete: if isAdmin();
    }

    // Announcements collection
    match /announcements/{announcementId} {
      // Anyone can read announcements (public)
      allow read: if true;

      // Only admins can create, update, or delete announcements
      allow create, update, delete: if isAdmin();
    }
  }
}
